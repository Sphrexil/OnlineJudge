server:
  port: 10005
  servlet:
    session:
      timeout: 30m


rocketmq:
  name-server: 192.168.1.129:9876
  producer:
    group: producer-group1
  consumer:
    group: consumer-group1

spring:
  application:
    name: judge
  # 兼容swagger
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    username: root
    password: 123
    url: jdbc:mysql://127.0.0.1:3306/onlinejudge?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
    # type: com.alibaba.druid.pool.DruidDataSource
  flyway:
    # 是否启用flyway
    enabled: true
    # 编码格式，默认UTF-8
    encoding: UTF-8
    # 迁移sql脚本文件存放路径，默认db/migration
    locations: classpath:db/migration
    # 迁移sql脚本文件名称的前缀，默认V
    sql-migration-prefix: V
    # 迁移sql脚本文件名称的分隔符，默认2个下划线__
    sql-migration-separator: __
    # 迁移sql脚本文件名称的后缀
    sql-migration-suffixes: .sql
    # 迁移时是否进行校验，默认true
    validate-on-migrate: true
    # 当迁移发现数据库非空且存在没有元数据的表时，自动执行基准迁移，新建schema_version表
    baseline-on-migrate: true
  cache:
    type: redis
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
  #####################################rocketmq配置#####################################
#    stream:
#      rocketmq:
#        binder:
#          name-server: 192.168.1.129:9876
#          enable-msg-trace: true
#        bindings:
          #开启事务消息需要在这边再次配置 在stream->rocketmq->bindings下配
          #生产者配置
#          Boolean enabled = true;
#          String group;
#          Integer maxMessageSize = 4194304;
#          Boolean transactional = false;
#          Boolean sync = false;
#          Boolean vipChannelEnabled = true;
#          int sendMessageTimeout = 3000;
#          int compressMessageBodyThreshold = 4096;
#          int retryTimesWhenSendFailed = 2;
#          int retryTimesWhenSendAsyncFailed = 2;
#          boolean retryNextServer = false;
          #消费者配置
#          String tags;
#          String sql;
#          broadcasting = false;
#          orderly = false;
#          delayLevelWhenNextConsume = 0;
#          suspendCurrentQueueTimeMillis = 1000L;
#          enabled = true;
#          pullTimeout = 10000L;
#          boolean fromStore;
#          ResOutput:
#            producer:
#              transactional: true
#              group: res-group
#          SubmissionInput:
#            consumer:
#              delayLevelWhenNextConsume: -1
#              group: sub-group
          ##### 配置基本队列配置在stream->bindings下面配
          #基本属性配置 见下官文
          #https://spring-cloud-alibaba-group.github.io/github-pages/2021/en-us/index.html#_spring_cloud_alibaba_rocketmq_binder
#      bindings:
    ###########开发测试组################
#        SubmissionInput:
#          destination: sub-topic  #  topic位置
#          contentType: application/json  #  消息类型
#          group: sub-group #  生产者组别
#        ResOutput:
#          destination: res-topic
#          contentType: application/json
#          group: res-group
  #####################################mybatis-plus配置#####################################
mybatis-plus:
  configuration:
    #日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: deFlag
      logic-delete-value: 0
      logic-not-delete-value: 1
      id-type: auto

  #日志
logging:
  level:
    com:
      alibaba:
        cloud:
          stream:
            binder:
              rocketmq: INFO
